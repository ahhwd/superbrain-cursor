generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  hashedPassword String?
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  highlights    Highlight[]
  contents      Content[]
  notionIntegration NotionIntegration?
  savedContents     SavedContent[]
  topics           Topic[]
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model NotionIntegration {
  id                String   @id @default(cuid())
  userId            String   @unique
  accessToken       String
  workspaceId       String
  databaseId        String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model SavedContent {
  id          String   @id @default(cuid())
  userId      String
  url         String
  title       String?
  content     String   @db.Text
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  topics      Topic[]
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Topic {
  id            String         @id @default(cuid())
  name          String
  userId        String
  notionPageId  String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  user          User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  savedContents SavedContent[]

  @@unique([userId, name])
}

model Highlight {
  id        String   @id @default(cuid())
  title     String?
  content   String   @db.Text
  category  String
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, category])
}

model Content {
  id        String   @id @default(cuid())
  title     String?
  content   String   @db.Text
  summary   String?  @db.Text
  url       String?
  category  String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}